name: Validate Submission

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    container: python:3.11
    steps:
      - uses: actions/checkout@v4
      
      - name: Check problem uniqueness
        run: |
          pip install pyyaml
          python validate_problem_uniqueness.py
          
      - name: Install dependencies
        run: pip install pytest
      
      - name: Run tests
        run: |
          for dir in problems/*/; do
            if [ -f "$dir/tests.py" ]; then
              echo "Testing $dir"
              python -m pytest "$dir/tests.py" -v || echo "::warning::Tests failed in $dir"
            fi
          done
      
      - name: Create test report
        if: always()
        run: |
          echo "Test Results:" > test-report.md
          echo '```' >> test-report.md
          pytest problems/ --tb=line -v >> test-report.md 2>&1 || true
          echo '```' >> test-report.md
          
      - name: Upload test results (only for PRs)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'test-report.md';
            
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              if (context.issue.number) { // Ensure issue number exists
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `Test Results:\n\`\`\`\n${report}\n\`\`\``
                });
              } else {
                console.log("No issue number found, skipping comment.");
              }
            } else {
              console.log("No test report found, skipping comment.");
            }

    