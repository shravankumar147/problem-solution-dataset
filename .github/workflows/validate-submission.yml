name: Validate Submission

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    container: python:3.11  # Ensures consistent environment
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install pytest pyyaml

      - name: Check problem uniqueness
        run: python validate_problem_uniqueness.py

      - name: Clean pytest cache and __pycache__
        run: |
          rm -rf .pytest_cache
          find problems -name "__pycache__" -exec rm -rf {} +

      - name: Run tests
        run: |
          for dir in problems/*/; do
            if [ -f "$dir/tests.py" ]; then
              echo "Testing $dir"
              python -m pytest "$dir/tests.py" -v || echo "::warning::Tests failed in $dir"
            fi
          done

      - name: Create test report
        if: always()
        run: |
          echo "Test Results:" > test-report.md
          echo '```' >> test-report.md
          pytest problems/ --tb=short -v | tee -a test-report.md || true
          echo '```' >> test-report.md

      - name: Upload test results to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const issue_number = context.payload.pull_request.number;
            if (!issue_number) {
              console.log("Skipping comment: Not a pull request");
              return;
            }
            const report = fs.readFileSync('test-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
